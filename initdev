#!/usr/bin/env bash

cat <<EOF

  ██          ██   ██        ██
 ░░          ░░   ░██       ░██
  ██ ███████  ██ ██████     ░██  █████  ██    ██
 ░██░░██░░░██░██░░░██░   ██████ ██░░░██░██   ░██
 ░██ ░██  ░██░██  ░██   ██░░░██░███████░░██ ░██
 ░██ ░██  ░██░██  ░██  ░██  ░██░██░░░░  ░░████
 ░██ ███  ░██░██  ░░██ ░░██████░░██████  ░░██
 ░░ ░░░   ░░ ░░    ░░   ░░░░░░  ░░░░░░    ░░

 v0.1

 T0mab 2K16 DIP FTW !!!!!!

EOF



# Fancy things
NORMAL=$(tput sgr0)
GREEN=$(tput setaf 2; tput bold)
YELLOW=$(tput setaf 3)
RED=$(tput setaf 1)

# Vars
CURRENT_PATH="$PWD"
APP_NAME=$(basename $VIRTUAL_ENV)
SETTINGS_PATH="$CURRENT_PATH/$APP_NAME/settings/dev.py"

if [ -z ${VIRTUAL_ENV+x} ]; then echo "$RED Virtualenv not activated please activate it first ! $NORMAL" && exit 1; fi

# Functions
editVenvPostScripts() {
    read -p "Would you like to edit venv scripts ? $YELLOW [y/n] $NORMAL : " ANSWER
    case $ANSWER in
            [yY]* )
                if [ -z ${EDITOR+x} ]; then echo "Please set $RED EDITOR $NORMAL env var before trying to edit files!"&& exit; fi
                $EDITOR $VIRTUAL_ENV/bin/postactivate $VIRTUAL_ENV/bin/postdeactivate;;
            [nN]* )
               exit;;
            * )
               echo "Enter y or n please";;
    esac
}

addVenvPostScripts() {
    echo "export $1=$2" >> $VIRTUAL_ENV/bin/postactivate
    echo "unset $1" >> $VIRTUAL_ENV/bin/postdeactivate
}

getVenvDevSettingsPath() {
    unset SETTINGS_PATH
    read -p "Please provide fullpath to settings/dev.py ex : $GREEN $CURRENT_PATH/$APP_NAME/settings/dev.settings.py $NORMAL: " SETTINGS_PATH

    if [ -z ${SETTINGS_PATH} ];then
        echo "$RED"
        echo "Process cancelled $NORMAL"
        exit 1
    fi
}

getSettings() {
    SETTINGS=(DJANGO_SETTINGS_MODULE=$APP_NAME.settings.dev)
    SETTINGS+=($(sed -nr "s/.*environ.get\('([^']+)', *['\"]([^'\"]+).*/\1=\2/p" $1))
}

processSettings() {
    for SETTING in "${SETTINGS[@]}";
    do
        read -p "put $GREEN'$SETTING'$NORMAL value in postactivate ? $YELLOW [y/n] $NORMAL : " ANSWER

        case $ANSWER in
            [yY]* )
                putSetting $SETTING;;
            [nN]* )
                ;;
            * )
                echo "Enter y or n please";;
        esac
    done
}

putSetting() {
    R=($(echo $1 | sed s/=/\\n/g))
    addVenvPostScripts ${R[0]} ${R[1]]}
}

# Main stuff
while true
do
  read -p "App settings path : $GREEN $SETTINGS_PATH $NORMAL correct ? $YELLOW [y/n] $NORMAL : " ANSWER
  case $ANSWER in
   [yY]* )
           getSettings $SETTINGS_PATH
           break;;

   [nN]* )
           getVenvDevSettingsPath
           getSettings $SETTINGS_PATH
           break;;

   * )     echo "Enter y or n please";;
  esac
done

processSettings
editVenvPostScripts
exit
